/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define TRI 3

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = < LWR RSE >;
            then-layer = <TRI>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
            &lt TRI ESCAPE &kp Q &kp W &kp E &kp R &kp T &kp Y &kp U &kp I &kp O &kp P &kp LBKT
            &kp TAB &mt LCTRL A &mt LALT S &mt LGUI D &mt LSHFT F &kp G &kp H &mt RSHFT J &mt RGUI K &mt RALT L &mt RCTRL SEMI &kp SQT
            &kp LSHFT &kp Z &kp X &kp C &kp V &kp B &kp N &kp M &kp COMMA &kp DOT &kp MINUS &kp FSLH
                                              &lt LWR SPACE &lt LWR SPACE &kp BSPC &kp RET &lt RSE RET &kp DELETE
          >;
        };

        lower_layer {
            bindings = <
            &kp GRAVE &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp EQUAL
            &kp LPAR &kp RPAR &kp LBKT &kp RBKT &kp LBRC &kp RBRC &kp UNDER &kp DQT &kp SQT &kp RA(E) &kp BSLH &kp PIPE
            &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT &kp CARET &kp CARET &kp AMPS &kp ASTRK &kp LESS &kp GREATER &kp FSLH
                                              &trans &trans &kp LC(BSPC) &kp RET &trans &kp LC(DELETE)
          >;
        };

        raise_layer {
            bindings = <
            &kp PSCRN &trans &trans &trans &trans &trans &trans &trans &kp INS &trans &trans &kp C_MUTE
            &caps_word &kp HOME &kp PG_DN &kp PG_UP &kp END &trans &kp LEFT &kp DOWN &kp UP &kp RIGHT &kp LC(LEFT) &kp LC(RIGHT)
            &kp LGUI &kp LCTRL &kp LEFT_ALT &kp LSHFT &trans &trans &kp LC(Z) &kp LC(X) &kp LC(C) &kp LC(V) &kp TAB &kp ESCAPE
                                              &lt LWR SPACE &lt LWR SPACE &kp BSPC &kp RET &lt RSE RET &kp DELETE
          >;
        };

        tri_layer {
            bindings = <
            &reset &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &kp F11
            &trans &kp F12 &rgb_ug RGB_SPD &rgb_ug RGB_SPI &kp C_VOL_DN &kp C_VOL_UP &kp C_PP &kp C_PREV &kp C_NEXT &kp C_MUTE &trans &trans
            &trans &rgb_ug RGB_HUD &rgb_ug RGB_HUI &rgb_ug RGB_SAD &rgb_ug RGB_SAI &trans &trans &trans &trans &trans &trans &trans
                                              &trans &trans &trans &trans &trans &trans
          >;
        };
    };
};
